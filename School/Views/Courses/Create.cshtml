@model School.Models.Course
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script>
</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        @Html.ValidationSummary(false, "Please Correct Following Error", new { @class = "text-danger" })

        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Basic Info</a></li>
                <li><a href="#tabs-2">Other</a></li>
            </ul>
            <div id="tabs-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.credits, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.credits, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.credits, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Rating,new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Level2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownList("Levels", null, new { @class = "from-control" })*@

                        <select name="Level2" id="cars" class="form-control">
                            @foreach (var item in ViewBag.levels)
                            {
                                <option value="@item.CourseLevelId">@item.LevelTitle</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.Level2, "", new { @class = "text-danger" })
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="form-group my-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" data-val="true" type="checkbox" data-val-required="The IsActive field is required." role="switch"  id="IsActive" name="IsActive" value="true" checked>
                            <label class="form-check-label" for="Is Active">Is Active</label>
                        </div>
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
            </div>
            <div id="tabs-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.CourseDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.CourseDescription, 8, 100, new { htmlAttributes = new { @class = "form-control w-100" } })
                        @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
